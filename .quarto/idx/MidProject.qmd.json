{"title":"G01478008","markdown":{"yaml":{"editor":"visual"},"headingText":"G01478008","containsRefs":false,"markdown":"\nMid Project\n\nproject group : 18\n\nSai Yashwanth Reddy Gowram\n\nG01477699\n\nPrawanth Reddy Talasani\n\n\n## Data Set 1\n\n| Rank | Employer           | Median_Total_Salary |\n|------|--------------------|---------------------|\n| 1    | Palo Alto Networks | 170929              |\n| 2    | NVIDIA             | 170068              |\n| 3    | Twitter            | 162852              |\n| 4    | Gilead Sciences    | 162210              |\n| 5    | Google             | 161254              |\n| 6    | VMware             | 158063              |\n| 7    | LinkedIn           | 157402              |\n| 8    | Facebook           | 152962              |\n| 9    | Salesforce         | 150379              |\n| 10   | Microsoft          | 148068              |\n| 11   | Juniper Networks   | 146781              |\n| 12   | ServiceNow         | 145529              |\n| 13   | McKinsey & Company | 145367              |\n| 14   | PlayStation        | 143229              |\n| 15   | Autodesk           | 142083              |\n| 16   | Workday            | 141893              |\n| 17   | Synopsys           | 140577              |\n| 18   | eBay               | 140056              |\n| 19   | BNP Paribas        | 140056              |\n| 20   | Qualcomm           | 139754              |\n| 21   | Tableau Software   | 138043              |\n| 22   | Western Digital    | 137527              |\n| 23   | Veritas            | 137244              |\n| 24   | Adobe              | 135027              |\n| 25   | Genentech          | 133605              |\n\n: D\n\nThe Bad Visualization\n\n![](images/WhatsApp Image 2024-03-11 at 12.28.05 PM.jpeg)\n\nExplanation about the Bad Visualization\n\nThe Visualization explains about the Highest paying Companies In the year 2019 and their ranking by median total salary. In the given visualization the salary amount is a round off figure and we made three proper visualization from the above data set we took .We will be doing Bar graph, Scatter Plot , Line graph as proper visualization.\n\n```{r}\nsalary<-read.csv('C:/Users/HP/Downloads/US companies.csv')\nstr(salary)\nhead(salary)\n```\n\n```{r}\n\n#bar graph\nlibrary(ggplot2)\nggplot(salary, aes(x = employer, y = median_total_salary,group = 1)) +\n  geom_bar(stat = \"identity\",fill = 'blue') +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1))\n```\n\nThe result is that the resulting graph is a bar chart where each bar represents a different employer, and the height of each bar corresponds to the median total salary for that employer. The bars are filled with a blue color, and the x-axis labels are rotated for better visualization.\n\n```{r}\n\n```\n\n```{r}\n\n```\n\n```{r}\n#scatter plot\nlibrary(ggplot2)\nggplot(salary, aes(x = employer, y = median_total_salary)) +\n  geom_point() +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1))\n```\n\nThe resulting graph is a scatter plot where each point represents a different employer. The x-axis shows the employers, and the y-axis shows the corresponding median total salary. This type of plot is useful for visualizing the distribution and relationships between individual data points for each employer.\n\n```{r}\n#line graph using ggplot\nlibrary(ggplot2)\nggplot(salary, aes(x = employer, y = median_total_salary, group = 1)) +\n  geom_line() +\n  labs(title = 'Employer Median Total Salary Line Graph', x = 'Employer') +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1))\n```\n\nThe output graph is a line graph with employers on the x-axis, median total salaries on the y-axis, and a line connecting the median total salary points for each employer. The x-axis labels (employer names) will be rotated by 90 degrees for better visibility. The graph provides a visual representation of how median total salaries vary across different employers.\n\n# Data set 2\n\n| Model                  | Price | Miles |\n|------------------------|-------|-------|\n| mini cooper SE         | 29900 | 110   |\n| 2021 nissan leaf       | 31620 | 149   |\n| 2021 chevorlet         | 31995 | 259   |\n| hyundai ioniq electric | 33045 | 170   |\n| chevorlet bolt euv     | 33995 | 250   |\n| 2021 hyundai kona ev   | 37390 | 258   |\n| kia niro ev            | 39090 | 239   |\n| volkswagen ID.4        | 39995 | 250   |\n| nissan ariya           | 40000 | 300   |\n| ford mustang mach e    | 42985 | 230   |\n\nThe Bad Visualization\n\n![](images/WhatsApp Image 2024-03-11 at 1.31.12 PM.jpeg)\n\nExplanation about the Bad Visualization\n\nThe Visualization explains about the top 10 America's cheapest electric cars in the year 2021. In the given visualization of round off miles per charge and we made three proper visualization from the above data set we took so that we can identify exact numbers and can get a proper understanding after seeing out visualizations. We will be doing Bar graph, Scatter Plot , Line graph as proper visualization.\n\n```{r}\nEVcars<-read.csv('C:/Users/HP/Downloads/cars datasheet.csv')\nstr(EVcars)\n```\n\n```{r}\n# bar graph using ggplot\nlibrary(ggplot2)\n  ggplot(EVcars, aes(x = MODEL, y = PRICE)) +\n    geom_bar(stat = \"identity\", fill = 'red') +\n    geom_text(aes(label = PRICE), vjust = -0.5, color = 'black', size = 3) +  \n    labs(title = 'Car Prices Bar Plot', x = 'Car Names', y = 'Prices') +\n    theme(axis.text.x = element_text(angle = 90, hjust = 1))\n```\n\nThe output graph is a bar plot with car models on the x-axis, prices on the y-axis, and bars representing the prices of each car model. Text labels are added above the bars, showing the corresponding prices. The graph provides a visual representation of how the prices vary across different electric car models. The red bars and black text labels enhance the visibility of the data.\n\n```{r}\n# scatter plot using ggplot\nlibrary(ggplot2)\n        ggplot(EVcars, aes(x = MODEL, y = MILES, group = 1)) +\n        geom_point() +\n        geom_text(aes(label = MILES), vjust = -0.5, color = 'blue', size = 3) +\n        labs(title = 'Car Miles Scatter Plot', x = 'Car Names', y = 'Miles') +\n        theme(axis.text.x = element_text(angle = 90, hjust = 1)) +\n        ylim(0, max(EVcars$MILES) + 100) \n```\n\nThe output graph is a scatter plot with car models on the x-axis, miles on the y-axis, points representing the mileage of each car model, and blue text labels above each point indicating the specific mileage value. The y-axis is limited to ensure the plot accommodates all data points within a reasonable range. The graph provides a visual representation of how the mileage varies across different electric car models.\n\n```{r}\n# line graph using ggplot \nlibrary(ggplot2)\n      ggplot(EVcars, aes(x = MODEL, y = MILES, group = 1)) +\n        geom_line() +  \n        geom_text(aes(label = MILES), vjust = -0.5, color = 'blue', size = 3) +  \n        labs(title = 'Car Miles Line Graph', x = 'Car Names', y = 'Miles') +\n        theme(axis.text.x = element_text(angle = 90, hjust = 1)) +\n        ylim(0, max(EVcars$MILES) + 100)\n```\n\nThe output graph is a line graph with car models on the x-axis, miles on the y-axis, a line connecting the mileage points for each car model, and blue text labels above the line indicating the specific mileage values. The y-axis is limited to ensure the plot accommodates all data points within a reasonable range. The graph provides a visual representation of how the mileage varies across different electric car models over the specified range.\n","srcMarkdownNoYaml":"\nMid Project\n\nproject group : 18\n\nSai Yashwanth Reddy Gowram\n\nG01477699\n\nPrawanth Reddy Talasani\n\nG01478008\n---\n\n## Data Set 1\n\n| Rank | Employer           | Median_Total_Salary |\n|------|--------------------|---------------------|\n| 1    | Palo Alto Networks | 170929              |\n| 2    | NVIDIA             | 170068              |\n| 3    | Twitter            | 162852              |\n| 4    | Gilead Sciences    | 162210              |\n| 5    | Google             | 161254              |\n| 6    | VMware             | 158063              |\n| 7    | LinkedIn           | 157402              |\n| 8    | Facebook           | 152962              |\n| 9    | Salesforce         | 150379              |\n| 10   | Microsoft          | 148068              |\n| 11   | Juniper Networks   | 146781              |\n| 12   | ServiceNow         | 145529              |\n| 13   | McKinsey & Company | 145367              |\n| 14   | PlayStation        | 143229              |\n| 15   | Autodesk           | 142083              |\n| 16   | Workday            | 141893              |\n| 17   | Synopsys           | 140577              |\n| 18   | eBay               | 140056              |\n| 19   | BNP Paribas        | 140056              |\n| 20   | Qualcomm           | 139754              |\n| 21   | Tableau Software   | 138043              |\n| 22   | Western Digital    | 137527              |\n| 23   | Veritas            | 137244              |\n| 24   | Adobe              | 135027              |\n| 25   | Genentech          | 133605              |\n\n: D\n\nThe Bad Visualization\n\n![](images/WhatsApp Image 2024-03-11 at 12.28.05 PM.jpeg)\n\nExplanation about the Bad Visualization\n\nThe Visualization explains about the Highest paying Companies In the year 2019 and their ranking by median total salary. In the given visualization the salary amount is a round off figure and we made three proper visualization from the above data set we took .We will be doing Bar graph, Scatter Plot , Line graph as proper visualization.\n\n```{r}\nsalary<-read.csv('C:/Users/HP/Downloads/US companies.csv')\nstr(salary)\nhead(salary)\n```\n\n```{r}\n\n#bar graph\nlibrary(ggplot2)\nggplot(salary, aes(x = employer, y = median_total_salary,group = 1)) +\n  geom_bar(stat = \"identity\",fill = 'blue') +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1))\n```\n\nThe result is that the resulting graph is a bar chart where each bar represents a different employer, and the height of each bar corresponds to the median total salary for that employer. The bars are filled with a blue color, and the x-axis labels are rotated for better visualization.\n\n```{r}\n\n```\n\n```{r}\n\n```\n\n```{r}\n#scatter plot\nlibrary(ggplot2)\nggplot(salary, aes(x = employer, y = median_total_salary)) +\n  geom_point() +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1))\n```\n\nThe resulting graph is a scatter plot where each point represents a different employer. The x-axis shows the employers, and the y-axis shows the corresponding median total salary. This type of plot is useful for visualizing the distribution and relationships between individual data points for each employer.\n\n```{r}\n#line graph using ggplot\nlibrary(ggplot2)\nggplot(salary, aes(x = employer, y = median_total_salary, group = 1)) +\n  geom_line() +\n  labs(title = 'Employer Median Total Salary Line Graph', x = 'Employer') +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1))\n```\n\nThe output graph is a line graph with employers on the x-axis, median total salaries on the y-axis, and a line connecting the median total salary points for each employer. The x-axis labels (employer names) will be rotated by 90 degrees for better visibility. The graph provides a visual representation of how median total salaries vary across different employers.\n\n# Data set 2\n\n| Model                  | Price | Miles |\n|------------------------|-------|-------|\n| mini cooper SE         | 29900 | 110   |\n| 2021 nissan leaf       | 31620 | 149   |\n| 2021 chevorlet         | 31995 | 259   |\n| hyundai ioniq electric | 33045 | 170   |\n| chevorlet bolt euv     | 33995 | 250   |\n| 2021 hyundai kona ev   | 37390 | 258   |\n| kia niro ev            | 39090 | 239   |\n| volkswagen ID.4        | 39995 | 250   |\n| nissan ariya           | 40000 | 300   |\n| ford mustang mach e    | 42985 | 230   |\n\nThe Bad Visualization\n\n![](images/WhatsApp Image 2024-03-11 at 1.31.12 PM.jpeg)\n\nExplanation about the Bad Visualization\n\nThe Visualization explains about the top 10 America's cheapest electric cars in the year 2021. In the given visualization of round off miles per charge and we made three proper visualization from the above data set we took so that we can identify exact numbers and can get a proper understanding after seeing out visualizations. We will be doing Bar graph, Scatter Plot , Line graph as proper visualization.\n\n```{r}\nEVcars<-read.csv('C:/Users/HP/Downloads/cars datasheet.csv')\nstr(EVcars)\n```\n\n```{r}\n# bar graph using ggplot\nlibrary(ggplot2)\n  ggplot(EVcars, aes(x = MODEL, y = PRICE)) +\n    geom_bar(stat = \"identity\", fill = 'red') +\n    geom_text(aes(label = PRICE), vjust = -0.5, color = 'black', size = 3) +  \n    labs(title = 'Car Prices Bar Plot', x = 'Car Names', y = 'Prices') +\n    theme(axis.text.x = element_text(angle = 90, hjust = 1))\n```\n\nThe output graph is a bar plot with car models on the x-axis, prices on the y-axis, and bars representing the prices of each car model. Text labels are added above the bars, showing the corresponding prices. The graph provides a visual representation of how the prices vary across different electric car models. The red bars and black text labels enhance the visibility of the data.\n\n```{r}\n# scatter plot using ggplot\nlibrary(ggplot2)\n        ggplot(EVcars, aes(x = MODEL, y = MILES, group = 1)) +\n        geom_point() +\n        geom_text(aes(label = MILES), vjust = -0.5, color = 'blue', size = 3) +\n        labs(title = 'Car Miles Scatter Plot', x = 'Car Names', y = 'Miles') +\n        theme(axis.text.x = element_text(angle = 90, hjust = 1)) +\n        ylim(0, max(EVcars$MILES) + 100) \n```\n\nThe output graph is a scatter plot with car models on the x-axis, miles on the y-axis, points representing the mileage of each car model, and blue text labels above each point indicating the specific mileage value. The y-axis is limited to ensure the plot accommodates all data points within a reasonable range. The graph provides a visual representation of how the mileage varies across different electric car models.\n\n```{r}\n# line graph using ggplot \nlibrary(ggplot2)\n      ggplot(EVcars, aes(x = MODEL, y = MILES, group = 1)) +\n        geom_line() +  \n        geom_text(aes(label = MILES), vjust = -0.5, color = 'blue', size = 3) +  \n        labs(title = 'Car Miles Line Graph', x = 'Car Names', y = 'Miles') +\n        theme(axis.text.x = element_text(angle = 90, hjust = 1)) +\n        ylim(0, max(EVcars$MILES) + 100)\n```\n\nThe output graph is a line graph with car models on the x-axis, miles on the y-axis, a line connecting the mileage points for each car model, and blue text labels above the line indicating the specific mileage values. The y-axis is limited to ensure the plot accommodates all data points within a reasonable range. The graph provides a visual representation of how the mileage varies across different electric car models over the specified range.\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","output-file":"MidProject.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.450","theme":{"light":"cosmo","dark":["cosmo","theme-dark.scss"]},"editor":"visual"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}